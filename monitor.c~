#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <time.h>

void monitorFile(char* fineName, char* word);

int main(int argc, char* argv[]){
	int i = 3;
	int nFiles = argc - 3;
	int time = 0;

	while(time < atoi(argv[1])){
		sleep(5);
		for(i; i < argc; i++)
			monitorFile(argv[i], argv[2]);
		time += 5;
	}

	return 0;
}
	
void monitorFile(char* fileName, char* word){
	int pipefd1[2];
	int pipefd2[2];
	pipe(pipefd1);
	pipe(pipefd2);
	
	if(fork() == 0){
		close(pipefd1[0]);
		dup2(pipefd1[1], STDOUT_FILENO);
		dup2(pipefd1[1], STDERR_FILENO);
		execlp("tail", "tail", "-F", fileName, "-n", "0", (char *)NULL);
	} else {
		if(fork() == 0){
			close(pipefd1[1]);
			dup2(pipefd1[0], STDIN_FILENO);
			close(pipefd2[0]);
			dup2(pipefd2[1], STDOUT_FILENO);
			dup2(pipefd2[1], STDERR_FILENO);
			execlp("grep", "grep", "--line-buffered", word, (char *)NULL);
		} else {
			char buffer[1024];
			close(pipefd2[1]);
			time_t rawtime;
			time(&rawtime);
			struct tm * timeData = localtime(&rawtime);
			while(read(pipefd2[0], buffer, sizeof(buffer)) != 0){
				printf("%s - %s - %s", asctime(timeData), argv[3], buffer);
			}
		}
	}
}
